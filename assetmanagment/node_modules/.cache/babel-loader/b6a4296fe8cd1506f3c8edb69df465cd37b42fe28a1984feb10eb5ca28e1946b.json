{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\AssetManagmentSystemVella\\\\assetmanagment\\\\src\\\\components\\\\Admin\\\\Transfer\\\\Transfer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { QRCode } from \"react-qrcode-logo\";\nimport axios from \"axios\"; // Ensure axios is imported\nimport \"./transfer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transfer = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const asset = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.asset;\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\n  const [name, setName] = useState((user === null || user === void 0 ? void 0 : user.username) || \"\");\n  const [company, setCompany] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n  const [assetUserName, setUserName] = useState(\"\");\n  const [assetUpdateDate, setAssetUpdateDate] = useState(\"\");\n  const [specialNote, setSpecialNote] = useState(\"\");\n  const [qrCodeData, setQrCodeData] = useState([]);\n  const qrCodeContainerRef = useRef(null);\n  const companies = [\"Vella\", \"98 Acers\", \"Ravana Pool Club\", \"Flying Ravana\"];\n  const departments = [\"ICT\", \"HR\", \"Kitchen\", \"Front Office\"];\n  const generateTrackingId = serialNumber => {\n    const companyCode = {\n      Vella: \"VE\",\n      \"98 Acers\": \"98\"\n    }[company] || \"XX\";\n    const departmentCode = {\n      ICT: \"IT\",\n      HR: \"HR\"\n    }[department] || \"XX\";\n    const serialSuffix = (asset === null || asset === void 0 ? void 0 : asset.mainCategory) === \"Electronic items\" ? serialNumber === null || serialNumber === void 0 ? void 0 : serialNumber.slice(-4) : \"\";\n    const datePart = new Date().toISOString().slice(2, 10).replace(/-/g, \"\");\n    return serialNumber ? `${companyCode}-${departmentCode}-${serialSuffix}` : `${companyCode}-${departmentCode}-${datePart}`;\n  };\n  const generateQRCode = () => {\n    if (!company || !department) {\n      alert(\"Please select both company and department.\");\n      return;\n    }\n    const trackingId = generateTrackingId(asset === null || asset === void 0 ? void 0 : asset.serialNumber);\n    const qrData = `http://localhost:3000/QRView/${trackingId}`;\n    setQrCodeData([{\n      component: asset === null || asset === void 0 ? void 0 : asset.assetName,\n      qrData,\n      trackingId\n    }]);\n  };\n  const handleUpdate = async () => {\n    try {\n      const updatedAsset = {\n        ...asset,\n        company,\n        department,\n        assetUserName,\n        assetUpdateDate,\n        trackingId: generateTrackingId(asset === null || asset === void 0 ? void 0 : asset.serialNumber),\n        specialNote\n      };\n      const response = await axios.put(`http://localhost:8000/api/updateAsset/${asset._id}`, updatedAsset);\n      if (response.status === 200) {\n        alert(\"Asset transfer successful!\");\n      }\n    } catch (error) {\n      console.error(\"Error transferring asset:\", error);\n      alert(\"An error occurred while transferring the asset.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transfer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transfer Asset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"transfer-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: (asset === null || asset === void 0 ? void 0 : asset.mainCategory) || \"\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: (asset === null || asset === void 0 ? void 0 : asset.assetName) || \"\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: (asset === null || asset === void 0 ? void 0 : asset.serialNumber) || \"\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: company,\n        onChange: e => setCompany(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), companies.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: c,\n          children: c\n        }, c, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: department,\n        onChange: e => setDepartment(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), departments.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: d,\n          children: d\n        }, d, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 35\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: generateQRCode,\n        children: \"Generate QR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), qrCodeData.map((item, index) => /*#__PURE__*/_jsxDEV(QRCode, {\n        value: item.qrData,\n        size: 100\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 42\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleUpdate,\n        children: \"Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Transfer, \"+cRUzo8FOZMtOYUSRuXh9oeiSps=\", false, function () {\n  return [useLocation];\n});\n_c = Transfer;\nexport default Transfer;\nvar _c;\n$RefreshReg$(_c, \"Transfer\");","map":{"version":3,"names":["React","useState","useRef","useLocation","QRCode","axios","jsxDEV","_jsxDEV","Transfer","_s","_location$state","location","asset","state","user","JSON","parse","localStorage","getItem","name","setName","username","company","setCompany","department","setDepartment","assetUserName","setUserName","assetUpdateDate","setAssetUpdateDate","specialNote","setSpecialNote","qrCodeData","setQrCodeData","qrCodeContainerRef","companies","departments","generateTrackingId","serialNumber","companyCode","Vella","departmentCode","ICT","HR","serialSuffix","mainCategory","slice","datePart","Date","toISOString","replace","generateQRCode","alert","trackingId","qrData","component","assetName","handleUpdate","updatedAsset","response","put","_id","status","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","readOnly","onChange","e","target","map","c","d","type","onClick","item","index","size","_c","$RefreshReg$"],"sources":["C:/projects/AssetManagmentSystemVella/assetmanagment/src/components/Admin/Transfer/Transfer.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { QRCode } from \"react-qrcode-logo\";\r\nimport axios from \"axios\"; // Ensure axios is imported\r\nimport \"./transfer.css\";\r\n\r\nconst Transfer = () => {\r\n  const location = useLocation();\r\n  const asset = location.state?.asset;\r\n  const user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n  const [name, setName] = useState(user?.username || \"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [assetUserName, setUserName] = useState(\"\");\r\n  const [assetUpdateDate, setAssetUpdateDate] = useState(\"\");\r\n  const [specialNote, setSpecialNote] = useState(\"\");\r\n\r\n  const [qrCodeData, setQrCodeData] = useState([]);\r\n  const qrCodeContainerRef = useRef(null);\r\n\r\n  const companies = [\"Vella\", \"98 Acers\", \"Ravana Pool Club\", \"Flying Ravana\"];\r\n  const departments = [\"ICT\", \"HR\", \"Kitchen\", \"Front Office\"];\r\n\r\n  const generateTrackingId = (serialNumber) => {\r\n    const companyCode = { Vella: \"VE\", \"98 Acers\": \"98\" }[company] || \"XX\";\r\n    const departmentCode = { ICT: \"IT\", HR: \"HR\" }[department] || \"XX\";\r\n    const serialSuffix = asset?.mainCategory === \"Electronic items\" ? serialNumber?.slice(-4) : \"\";\r\n    const datePart = new Date().toISOString().slice(2, 10).replace(/-/g, \"\");\r\n    return serialNumber ? `${companyCode}-${departmentCode}-${serialSuffix}` : `${companyCode}-${departmentCode}-${datePart}`;\r\n  };\r\n\r\n  const generateQRCode = () => {\r\n    if (!company || !department) {\r\n      alert(\"Please select both company and department.\");\r\n      return;\r\n    }\r\n    const trackingId = generateTrackingId(asset?.serialNumber);\r\n    const qrData = `http://localhost:3000/QRView/${trackingId}`;\r\n    setQrCodeData([{ component: asset?.assetName, qrData, trackingId }]);\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      const updatedAsset = {\r\n        ...asset,\r\n        company,\r\n        department,\r\n        assetUserName,\r\n        assetUpdateDate,\r\n        trackingId: generateTrackingId(asset?.serialNumber),\r\n        specialNote,\r\n      };\r\n      const response = await axios.put(`http://localhost:8000/api/updateAsset/${asset._id}`, updatedAsset);\r\n      if (response.status === 200) {\r\n        alert(\"Asset transfer successful!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error transferring asset:\", error);\r\n      alert(\"An error occurred while transferring the asset.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"transfer-container\">\r\n      <h2>Transfer Asset</h2>\r\n      <form className=\"transfer-form\">\r\n        <input value={name} readOnly />\r\n        <input value={asset?.mainCategory || \"\"} readOnly />\r\n        <input value={asset?.assetName || \"\"} readOnly />\r\n        <input value={asset?.serialNumber || \"\"} readOnly />\r\n        <select value={company} onChange={(e) => setCompany(e.target.value)}>\r\n          <option value=\"\">Select Company</option>\r\n          {companies.map((c) => <option key={c} value={c}>{c}</option>)}\r\n        </select>\r\n        <select value={department} onChange={(e) => setDepartment(e.target.value)}>\r\n          <option value=\"\">Select Department</option>\r\n          {departments.map((d) => <option key={d} value={d}>{d}</option>)}\r\n        </select>\r\n        <button type=\"button\" onClick={generateQRCode}>Generate QR</button>\r\n        {qrCodeData.map((item, index) => <QRCode key={index} value={item.qrData} size={100} />)}\r\n        <button type=\"button\" onClick={handleUpdate}>Transfer</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transfer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}