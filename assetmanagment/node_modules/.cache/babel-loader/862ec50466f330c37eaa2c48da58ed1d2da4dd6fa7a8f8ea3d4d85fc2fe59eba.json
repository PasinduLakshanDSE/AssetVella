{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\AssetManagmentSystemVella\\\\assetmanagment\\\\src\\\\components\\\\Company\\\\CompanyDashBoard\\\\CompanyDashBoard.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport './companyDashBoard.css';\nimport CompanyNavBar from \"../CompanyNav/CompanyNav\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyDashBoard = () => {\n  _s2();\n  const [Asset, setAsset] = useState([]);\n  //const [Admin, setAdmin] = useState(0);\n  const [Companyadmin, setCompanyAdmin] = useState(0);\n  const [DepartmentAdmin, setDepartmentAdmin] = useState(0);\n  useEffect(() => {\n    var _s = $RefreshSig$();\n    const fetchDashboardData = async () => {\n      _s();\n      try {\n        const AssetResponse = await axios.get(\"http://localhost:8000/api/AssetRegisterDetails/getAssetDetails\");\n        setAsset(AssetResponse.data);\n        useEffect(() => {\n          fetchAssets();\n        }, []);\n        const currentUser = JSON.parse(localStorage.getItem(\"currentUser\")); // Get logged-in user details\n\n        if (!currentUser || !currentUser.username) {\n          console.error(\"User data not found or username missing\");\n          return;\n        }\n        try {\n          // Fetch all registered users\n          const userResponse = await axios.get(\"http://localhost:8000/api/users/getallUsers\");\n          const allUsers = userResponse.data;\n\n          // Find the user that matches the current username\n          const userData = allUsers.find(user => user.username === currentUser.username);\n          if (!userData || !userData.companyName) {\n            console.error(\"User company details not found\");\n            return;\n          }\n\n          // Fetch asset details\n          const assetResponse = await axios.get(\"http://localhost:8000/api/AssetRegisterDetails/getAssetDetails2\");\n          const filteredAssets = assetResponse.data.filter(asset => asset.company === userData.companyName);\n          setAssetRegisterDetails(filteredAssets); // Only set assets that match the company\n        } catch (error) {\n          console.error(\"Error fetching asset details or user data:\", error);\n        }\n\n        // Fetch all users\n        const usersResponse = await axios.get(\"http://localhost:8000/api/users/getallUsers\");\n\n        // Filter users with destination === 'admin'\n        /* const adminUsers = usersResponse.data.filter(user => user.selectedOption === \"Admin\");\r\n         setAdmin(adminUsers.length);*/\n\n        const CompanyadminUsers = usersResponse.data.filter(user => user.selectedOption === \"CompanyAdmin\");\n        setCompanyAdmin(CompanyadminUsers.length);\n        const DepartmentadminUsers = usersResponse.data.filter(user => user.selectedOption === \"DepartmentAdmin\");\n        setDepartmentAdmin(DepartmentadminUsers.length);\n      } catch (error) {\n        console.error(\"Error fetching dashboard data:\", error);\n      }\n    };\n    _s(fetchDashboardData, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n    fetchDashboardData();\n  }, []);\n  const cards = [{\n    count: Asset.length,\n    label: \"Total Asset\",\n    color: \"blue\",\n    icon: /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-house-laptop si\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 71\n    }, this)\n  },\n  // { count: Admin, label: \"Total Admin \", color: \"green\", icon: <i className=\"fas fa-user-tie si\"></i> },\n  {\n    count: Companyadmin,\n    label: \"Total Company Users \",\n    color: \"teal\",\n    icon: /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-user si\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 80\n    }, this)\n  }, {\n    count: DepartmentAdmin,\n    label: \"Total Department Users\",\n    color: \"red\",\n    icon: /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-users si\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 84\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CompanyNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 9\n          }, this), \" / \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/CompanyDashBord\",\n            children: \"DashBoard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-cards\",\n        children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-card\",\n          style: {\n            backgroundColor: card.color\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: card.count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"clabel\",\n              children: card.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-icon\",\n            children: card.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s2(CompanyDashBoard, \"rbbGW1M3OFQdG06CPAQihVj4/fE=\");\n_c = CompanyDashBoard;\nexport default CompanyDashBoard;\nvar _c;\n$RefreshReg$(_c, \"CompanyDashBoard\");","map":{"version":3,"names":["React","useEffect","useState","axios","CompanyNavBar","Link","jsxDEV","_jsxDEV","CompanyDashBoard","_s2","Asset","setAsset","Companyadmin","setCompanyAdmin","DepartmentAdmin","setDepartmentAdmin","_s","$RefreshSig$","fetchDashboardData","AssetResponse","get","data","fetchAssets","currentUser","JSON","parse","localStorage","getItem","username","console","error","userResponse","allUsers","userData","find","user","companyName","assetResponse","filteredAssets","filter","asset","company","setAssetRegisterDetails","usersResponse","CompanyadminUsers","selectedOption","length","DepartmentadminUsers","cards","count","label","color","icon","className","fileName","_jsxFileName","lineNumber","columnNumber","children","to","map","card","index","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/projects/AssetManagmentSystemVella/assetmanagment/src/components/Company/CompanyDashBoard/CompanyDashBoard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport './companyDashBoard.css'\r\nimport CompanyNavBar from \"../CompanyNav/CompanyNav\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst CompanyDashBoard = () => {\r\n  const [Asset, setAsset] = useState([]);\r\n  //const [Admin, setAdmin] = useState(0);\r\n  const [Companyadmin, setCompanyAdmin] = useState(0);\r\n  const [DepartmentAdmin, setDepartmentAdmin] = useState(0);\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        const AssetResponse = await axios.get(\"http://localhost:8000/api/AssetRegisterDetails/getAssetDetails\")\r\n        setAsset(AssetResponse.data);\r\n\r\n        useEffect(() => {\r\n          fetchAssets();\r\n      }, []);\r\n  \r\n    \r\n          const currentUser = JSON.parse(localStorage.getItem(\"currentUser\")); // Get logged-in user details\r\n      \r\n          if (!currentUser || !currentUser.username) {\r\n              console.error(\"User data not found or username missing\");\r\n              return;\r\n          }\r\n      \r\n          try {\r\n              // Fetch all registered users\r\n              const userResponse = await axios.get(\"http://localhost:8000/api/users/getallUsers\");\r\n              const allUsers = userResponse.data;\r\n      \r\n              // Find the user that matches the current username\r\n              const userData = allUsers.find(user => user.username === currentUser.username);\r\n      \r\n              if (!userData || !userData.companyName) {\r\n                  console.error(\"User company details not found\");\r\n                  return;\r\n              }\r\n      \r\n              // Fetch asset details\r\n              const assetResponse = await axios.get(\"http://localhost:8000/api/AssetRegisterDetails/getAssetDetails2\");\r\n              const filteredAssets = assetResponse.data.filter(asset => asset.company === userData.companyName);\r\n      \r\n              setAssetRegisterDetails(filteredAssets); // Only set assets that match the company\r\n          } catch (error) {\r\n              console.error(\"Error fetching asset details or user data:\", error);\r\n          }\r\n      \r\n\r\n\r\n        // Fetch all users\r\n        const usersResponse = await axios.get(\"http://localhost:8000/api/users/getallUsers\");\r\n\r\n        // Filter users with destination === 'admin'\r\n       /* const adminUsers = usersResponse.data.filter(user => user.selectedOption === \"Admin\");\r\n        setAdmin(adminUsers.length);*/\r\n\r\n        const CompanyadminUsers = usersResponse.data.filter(user => user.selectedOption === \"CompanyAdmin\");\r\n        setCompanyAdmin(CompanyadminUsers.length);\r\n\r\n        const DepartmentadminUsers = usersResponse.data.filter(user => user.selectedOption === \"DepartmentAdmin\");\r\n        setDepartmentAdmin(DepartmentadminUsers.length);\r\n\r\n        \r\n\r\n      } catch (error) {\r\n        console.error(\"Error fetching dashboard data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchDashboardData();\r\n  }, []);\r\n\r\n  const cards = [\r\n    { count: Asset.length, label: \"Total Asset\", color: \"blue\", icon: <i className=\"fas fa-house-laptop si\"></i> },\r\n   // { count: Admin, label: \"Total Admin \", color: \"green\", icon: <i className=\"fas fa-user-tie si\"></i> },\r\n    { count: Companyadmin, label: \"Total Company Users \", color: \"teal\", icon: <i className=\"fas fa-user si\"></i> },\r\n    { count: DepartmentAdmin, label: \"Total Department Users\", color: \"red\", icon: <i className=\"fas fa-users si\"></i> },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <CompanyNavBar/>\r\n\r\n      <div className=\"dashboard\">\r\n        <div className=\"dashboard-header\">\r\n          <h1 className=\"title\">Dashboard</h1>\r\n          <p>\r\n        <Link to=\"/\">Home</Link> / <Link to=\"/CompanyDashBord\">DashBoard</Link>\r\n      </p>\r\n        </div>\r\n\r\n        <div className=\"dashboard-cards\">\r\n          {cards.map((card, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"dashboard-card\"\r\n              style={{ backgroundColor: card.color }}\r\n            >\r\n              <div className=\"card-content\">\r\n                <h2>{card.count}</h2>\r\n                <p className=\"clabel\">{card.label}</p>\r\n              </div>\r\n              <div className=\"card-icon\">\r\n                {card.icon}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyDashBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}